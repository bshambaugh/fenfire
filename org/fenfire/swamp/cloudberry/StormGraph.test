# -*-python-*-
# 
# Copyright (c) 2004, Matti J. Katila
# This file is part of Fenfire.
# 
# Fenfire is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# Fenfire is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
# Public License for more details.
# 
# You should have received a copy of the GNU General
# Public License along with Fenfire; if not, write to the Free
# Software Foundation, Inc., 59 Temple Place, Suite 330, Boston,
# MA  02111-1307  USA
# 



import org.fenfire as ff
import org.nongnu.storm as storm
import java

def setUp():
    global graph
    graph = ff.swamp.impl.HashQuadsGraph()
        

def testMultipleGraphs():
    l = []
    for i in range(3):
        l.append(ff.swamp.Nodes.N())

    stormG = ff.swamp.cloudberry.StormGraph(graph,
        storm.impl.TransientPool(java.util.HashSet()),
                                            None)
    stormG.add(l[0], l[1], l[2])
    assert stormG.contains(l[0], l[1], l[2]) == 1
    stormG.remove()
    assert stormG.contains(l[0], l[1], l[2]) == 0

    stormG2 = ff.swamp.cloudberry.StormGraph(graph, None, None)
    stormG.add(l[0], l[1], l[2])
    stormG2.add(l[0], l[1], l[2])
    assert stormG.contains(l[0], l[1], l[2])
    assert stormG2.contains(l[0], l[1], l[2])
    stormG.remove()
    assert not stormG.contains(l[0], l[1], l[2])
    assert stormG2.contains(l[0], l[1], l[2])
    stormG2.remove()
    assert not stormG.contains(l[0], l[1], l[2])
    assert not stormG2.contains(l[0], l[1], l[2])

    
