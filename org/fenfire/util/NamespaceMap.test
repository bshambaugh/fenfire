#
# Copyright (c) 2003 by Benja Fallenstein
#
# This file is part of Fenfire.
# 
# Fenfire is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# Fenfire is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
# Public License for more details.
# 
# You should have received a copy of the GNU General
# Public License along with Fenfire; if not, write to the Free
# Software Foundation, Inc., 59 Temple Place, Suite 330, Boston,
# MA  02111-1307  USA
#

import org.fenfire.util, java

def testSimple():
    map = org.fenfire.util.NamespaceMap()

    assert map.getAbbrev("http://example.com/foo") == \
           "http://example.com/foo"
    assert map.getAbbrev("mailto:foo@example.org") == \
           "mailto:foo@example.org"
    assert map.getAbbrev("urn:x-foo:foo") == "urn:x-foo:foo"

    map.put("one", "http://example.com/")

    assert map.getAbbrev("http://example.com/foo") == "one:foo"
    assert map.getAbbrev("mailto:foo@example.org") == \
           "mailto:foo@example.org"
    assert map.getAbbrev("urn:x-foo:foo") == "urn:x-foo:foo"

    map.put("two", "mailto:foo@")

    assert map.getAbbrev("http://example.com/foo") == "one:foo"
    assert map.getAbbrev("mailto:foo@example.org") == "two:example.org"
    assert map.getAbbrev("urn:x-foo:foo") == "urn:x-foo:foo"
    

def testFromXML():
    map = org.fenfire.util.NamespaceMap()
    xml = """
        <one:xml xmlns:one="http://example.com/"
                 xmlns="http://example.net/FOO">
            <foo/>
            <bar>bla</bar>
            <baz xmlns:two="mailto:foo@">
                <foo><one:boo/></foo>
            </baz>
        </one:xml>
    """

    assert map.getAbbrev("http://example.com/foo") == \
           "http://example.com/foo"
    assert map.getAbbrev("mailto:foo@example.org") == \
           "mailto:foo@example.org"
    assert map.getAbbrev("urn:x-foo:foo") == "urn:x-foo:foo"

    map.loadMappings(java.io.StringReader(xml))

    assert map.getAbbrev("http://example.com/foo") == "one:foo"
    assert map.getAbbrev("mailto:foo@example.org") == "two:example.org"
    assert map.getAbbrev("urn:x-foo:foo") == "urn:x-foo:foo"
    

def testCompareByAbbrev():
    map = org.fenfire.util.NamespaceMap()
    map.put("one", "http://example.com/")
    map.put("two", "mailto:foo@")

    cmp = map.getComparator().compare

    assert cmp("foo", "foo") == 0
    assert cmp("foo", "bar") > 0

    assert cmp("kabba", "http://example.com") > 0
    assert cmp("kabba", "http://example.com/innamespace") < 0

    assert cmp("http://example.com/1", "mailto:foo@example.com") < 0
    assert cmp("http://example.com/17", "http://example.com/17") == 0
